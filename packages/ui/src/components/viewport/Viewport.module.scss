.root {
  width: 100%;
  height: 100%;

  display: flex;
  flex-direction: column;
}

.viewport {
  width: 100%;
  height: 100%;
  overflow: hidden;
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
  flex-grow: 1;

  background-color: #000000;


  canvas {
    display: block;

  }

  &:fullscreen canvas {
    width: 100%;
    height: 100%;
    object-fit: contain;
  }

  &.pixelated canvas {
    image-rendering: pixelated;
  }
}

.renderingPreview {
  canvas {
    max-width: 100%;
    max-height: 100%;
  }
}

.alphaBackground canvas {
  background-color: rgba(0, 0, 0, 0.16);
  background-size: 80px;
  background-position: center;
  background-image: url('../../img/grid.svg');
}

.overlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}

.playback {
  background: var(--surface-color);
  display: grid;
  grid-template-columns: 1fr min-content 1fr;
  padding: 12px;
}

.time {
  color: rgba(255, 255, 255, 0.54);
  text-align: left;
}

.duration {
  color: rgba(255, 255, 255, 0.54);
  text-align: right;
}

.frames {
  margin: 0 8px;
  color: rgba(255, 255, 255, 0.32);
}

.controls {
  --input-background: var(--surface-color);
  bottom: auto;
  right: auto;
  padding: 12px;
  gap: 8px;
  display: flex;
}

.customStageOverlay {
  position: absolute;
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
  align-items: center;
  width: 100%;
  aspect-ratio: calc(16/9);
  color: #ffffff52;
  overflow: hidden;
  opacity: 1;

  .overlayContainer {
    padding: 0.5rem;
    overflow: hidden;
    opacity: 1;
    max-height: 100%;
    transform: translateY(0);
    transition: opacity .3s ease-out, max-height .8s ease-out, transform .1s ease-in;

    &.hidden {
      opacity: 0;
      max-height: 0%;
      transform: translateY(200%);
      transition: opacity .3s ease-out, max-height .8s ease-out, transform .1s ease-in;
    }

    .controls {
      display: flex;
      background-color: color-mix(in srgb, var(--surface-color) 70%, transparent);
      backdrop-filter: blur(3px);
      border-radius: var(--radius);
      padding: 1rem;
    }
  }


  .overlayProgress {
    width: 100%;
    // height: 2px;
    height: 0.2rem;

    .progress {
      transition: all 0.8s ease-out;
      height: 100%;
      background-color: transparent;
    }

    .progressFill {
      transition: all 0.8s ease-out;
      height: 100% !important;
      background-color: var(--theme);
      opacity: 0.9;
    }
  }

  .pauseIcon {
    align-self: flex-end;
    transition: all 0.8s ease-out;
    opacity: 0;

    svg {
      width: 1.8em;
      height: 1.8em;
      filter: drop-shadow(2px 2px 2px rgba(0, 0, 0, .2));
      color: #cccccc;
    }
  }

  &.paused {
    .progress {
      height: 70% !important;
      transition: all 0.7s ease-out;
      opacity: 0.4;
    }

    .pauseIcon {
      transition: all 0.7s ease-out;
      opacity: 0.7;
    }

  }
}

.coordinates {
  display: none;

  .viewport:hover & {
    display: block;
  }
}

.inspectorOverlay {
  pointer-events: none;
  position: absolute;
  top: 0;
  right: -424px;
  bottom: 0;
  padding: 12px;
  max-width: 424px;
  width: 40%;
  transition: right var(--duration-normal) var(--timing-ease-in-out);

  &.open {
    right: 0;
  }
}

.inspector {
  pointer-events: auto;
  height: 100%;
  border-radius: var(--radius);
  overflow: hidden;
}

.inspectorHeader {
  margin-right: auto;

  svg {
    rotate: 180deg;
  }
}

.inspectorButton {
  position: absolute;
  top: 12px;
  right: -28px;
  padding: 16px 28px 16px 4px;
  background-color: var(--surface-color);
  border-radius: 50%;
  transition-property: right, top, padding;
  transition-duration: var(--duration-normal);
  transition-timing-function: var(--timing-ease-in-out);

  svg {
    transition: rotate var(--duration-normal) var(--timing-ease-in-out);
    rotate: 180deg;
  }

  &.open {
    right: 24px;
    top: 20px;
    padding: 8px;

    svg {
      rotate: 0deg;
    }
  }
}